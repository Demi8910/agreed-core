[
  {
    request: {
      path: '/hoge/fuga',
      method: 'GET',
      query: {
        q: 'foo',
      },
    },
    response: {
      headers: {
        'x-csrf-token': 'csrf-token', 
      },
      body: {
        message: 'hello world',
      },
    },
  },
  './hoge/foo.json',
  './foo/bar.yaml',
  {
    request: './qux/request.json',
    response: './qux/response.json',
  },
  {
    request: {
      path: '/path/:id',
      method: 'GET',
      // value for test client
      values: {
        id: 'yosuke',
      },
    },
    response: {
      headers: {
        'x-csrf-token': 'csrf-token', 
      },
      body: {
        // :id is for request value
        message: 'hello {:id}',
      },
    },
  },
  {
    request: {
      path: '/path/:id',
      method: 'POST',
      // query embed data, any query is ok.
      query: {
        meta: "{:meta}",
      },
      body: {
        message: "{:message}"
      },
      // value for test client
      values: {
        id: 'yosuke',
        meta: true,
        message: 'foobarbaz'
      },
    },
    response: {
      headers: {
        'x-csrf-token': 'csrf-token', 
      },
      body: {
        // :id is for request value
        message: 'hello {:id}, {:meta}, {:message}',
      },
    },
  },
  {
    request: {
      path: '/path/header/format',
      method: 'GET',
    },
    response: {
      headers: {
        'access-control-allow-origin': '{:acao}'
      },
      body: {
        message: 'hello',
      },
      values: {
        'acao': '*'
      }
    },
  },
  {
    request: {
      path: '/path/default/header/',
      method: 'GET',
    },
    response: {
      body: {
        message: 'hello',
      },
    },
  },
  {
    request: {
      path: '/path/default/request/header/',
      method: 'GET',
      headers: {
        'x-forwarded-for': 'forward'
      },
    },
    response: {
      body: {
        message: 'forward',
      },
    },
  },
  {
    request: {
      path: '/test/case/insensitive/headers',
      method: 'GET',
      headers: {
        'This-Headers-Should-Be-Lower-Case': 'true'
      },
    },
    response: {
      body: {
        message: 'hello case insensitive headers',
      },
    },
  },
]
